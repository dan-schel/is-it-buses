@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  flex-shrink: 0;
}

/* 
 * Fixes single line text being affected by line height changes. Note I've 
 * written a custom Tailwind plugin so that the `leading-*` classes change 
 * `--line-spacing` instead of `line-height` directly. 
 */
:root {
  --line-spacing: 0.5em;
}
._text {
  display: block;
  line-height: calc(1em + var(--line-spacing)) !important;
}
._text::before,
._text::after {
  content: "";
  margin-top: calc(var(--line-spacing) / -2);
  height: 0;
  display: block;
}

/*
 * Used when using <Text oneLine>. Prevents text from wrapping and truncates
 * with an ellipsis if it gets too long.
 */
._one-line > * {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;

  /* Ensures characters that draw below the line aren't cut-off. */
  padding-bottom: 0.25em;
}
._one-line::after {
  /* Negates the effects of using padding-bottom above. */
  content: "";
  margin-bottom: -0.25em;
  height: 0;
  display: block;
}

/* Loading spinner styles */
svg._loading-spinner {
  animation: loading-spinner-flip 1s ease-out 0s infinite;
}
._loading-spinner circle:nth-child(2) {
  animation: loading-spinner-pulse 1s linear 0s infinite;
  transform-origin: 33% 33%;
}
._loading-spinner circle:nth-child(3) {
  animation: loading-spinner-pulse 1s linear 0.1s infinite;
  transform-origin: 67% 33%;
}
._loading-spinner circle:nth-child(4) {
  animation: loading-spinner-pulse 1s linear 0.2s infinite;
  transform-origin: 67% 67%;
}
._loading-spinner circle:nth-child(5) {
  animation: loading-spinner-pulse 1s linear 0.3s infinite;
  transform-origin: 33% 67%;
}

@keyframes loading-spinner-pulse {
  0% {
    transform: scale(1);
  }
  10% {
    transform: scale(2);
  }
  30% {
    transform: scale(1);
  }
}

@keyframes loading-spinner-flip {
  0% {
    transform: rotate(0deg);
  }
  60% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(180deg);
  }
}
